---
appcloudng:
  - screen: Network
    id: networks
    fields:
      - {name: network_name,                              label: vCenter Network,                                   type: string,
      yml_key: '["networks"][0]["subnets"][0]["cloud_properties"]["name"]',
      description: 'The name of the vCenter Network (Standard or Distributed Switch Network) that cloud VMs will be connected to. Please make sure that VMs in this network can reach the Commander VM.' }

      - {name: static_ip_range,                           label: Static IP Range,                                   type: ip_range,
      yml_key: '["networks"][0]["subnets"][0]["static"]',
      description: 'A list of IPs for cloud VMs. The "static" IPs are used for components whose IP needs to be determined prior to deployment. The routers are part of this group - their IP will be known prior to deployment, so proper DNS changes and routing can be made. An IP range looks like this: 10.0.0.100-10.0.0.120. You can specify multiple IP ranges separated by semicolons.' }

      - {name: dynamic_ip_range,                          label: Dynamic IP Range,                                  type: ip_range,
      yml_key: '["networks"][0]["subnets"][0]["reserved"]',
      description: 'A list of IP ranges used for cloud VMs. These are dynamic IPs that the Commander will assign to VMs, as they come online. Please make sure that this range does not conflict with the Static IP Range.' }

      - {name: subnet_mask,                               label: Subnet Mask,                                       type: ip,
      yml_key: '["networks"][0]["subnets"][0]["range"]',
      description: 'The subnet mask for the network.' }

      - {name: gateway,                                   label: Gateway,                                           type: ip,
      yml_key: '["networks"][0]["subnets"][0]["gateway"]',
      description: 'The gateway for the network.' }

      - {name: dns,                                       label: DNS,                                               type: ip_list,
      yml_key: '["networks"][0]["subnets"][0]["dns"]',
      description: 'A semicolon separated list of DNS servers. Please make sure that these DNS servers can translate the cloud''s domains (*.[domain] and *.tunnels.[domain]) to their proper internal IPs - or that HTTP traffic for these domains is routed to those internal IPs.' }

  - screen: Resource Pools
    id: resource_pools
    fields:

      - {name: stemcell_sep,                                  label: Stemcells,                     type: separator}

      - {name: linux_stemcell, label: Linux Stemcell, type: stemcell_linux,
      yml_key: ['["resource_pools"].select{|r| r["name"] == "tiny"}.first["stemcell"]', '["resource_pools"].select{|r| r["name"] == "small"}.first["stemcell"]', '["resource_pools"].select{|r| r["name"] == "medium"}.first["stemcell"]', '["resource_pools"].select{|r| r["name"] == "large"}.first["stemcell"]', '["resource_pools"].select{|r| r["name"] == "deas"}.first["stemcell"]' ],
      description: 'Specifies what VM stemcell should be used for deploying linux VMs.'}

      - {name: vsms_sep,                                  label: Very small management servers,                     type: separator}

      - {name: tiny_cpu,                                  label: Virtual CPU count,                                 type: numeric,
      yml_key: '["resource_pools"].select{|r| r["name"] == "tiny"}.first["cloud_properties"]["cpu"]',
      description: 'Specifies how many virtual CPUs tiny VMs should get. Recommended value is 1.' }

      - {name: tiny_disk,                                 label: Tiny Disk,                                         type: numeric,
      yml_key: '["resource_pools"].select{|r| r["name"] == "tiny"}.first["cloud_properties"]["disk"]',
      description: 'Specifies how much disk space tiny VMs should get. Recommended value is 5000 MB.' }

      - {name: tiny_ram,                                  label: Tiny Memory,                                       type: numeric,
      yml_key: '["resource_pools"].select{|r| r["name"] == "tiny"}.first["cloud_properties"]["ram"]',
      description: 'Specifies how much memory tiny VMs should get. Recommended value is 300 MB.' }

      - {name: sms_sep,                                   label: Small management servers,                          type: separator}

      - {name: small_cpu,                                 label: Small CPU,                                         type: numeric,
      yml_key: '["resource_pools"].select{|r| r["name"] == "small"}.first["cloud_properties"]["cpu"]',
      description: 'Specifies how many virtual CPUs small VMs should get. Recommended value is 1.' }

      - {name: small_disk,                                label: Small Disk,                                        type: numeric,
      yml_key: '["resource_pools"].select{|r| r["name"] == "small"}.first["cloud_properties"]["disk"]',
      description: 'Specifies how much disk space small VMs should get. Recommended value is 5000 MB.' }

      - {name: small_ram,                                 label: Small Memory,                                      type: numeric,
      yml_key: '["resource_pools"].select{|r| r["name"] == "small"}.first["cloud_properties"]["ram"]',
      description: 'Specifies how much memory small VMs should get. Recommended value is 512 MB.' }

      - {name: mms_sep,                                   label: Linux DEA and Service Nodes,                       type: separator}

      - {name: medium_cpu,                                label: Medium CPU,                                        type: numeric,
      yml_key: ['["resource_pools"].select{|r| r["name"] == "medium"}.first["cloud_properties"]["cpu"]', '["resource_pools"].select{|r| r["name"] == "deas"}.first["cloud_properties"]["cpu"]'],
      description: 'Specifies how many virtual CPUs medium VMs should get. Recommended value is 2.' }

      - {name: medium_disk,                               label: Medium Disk,                                       type: numeric,
      yml_key: ['["resource_pools"].select{|r| r["name"] == "medium"}.first["cloud_properties"]["disk"]', '["resource_pools"].select{|r| r["name"] == "deas"}.first["cloud_properties"]["disk"]'],
         description: 'Specifies how much disk space medium VMs should get. Recommended value is 5000 MB.' }
      - {name: medium_ram,                                label: Medium Memory,                                     type: numeric,
      yml_key: ['["resource_pools"].select{|r| r["name"] == "medium"}.first["cloud_properties"]["ram"]', '["resource_pools"].select{|r| r["name"] == "deas"}.first["cloud_properties"]["ram"]', '["properties"]["dea"]["max_memory"]'],
      description: 'Specifies much memory medium VMs should get. Recommended value is 1024 MB.' }

      - {name: lms_sep,                                   label: 'Large VMs',              type: separator}

      - {name: large_cpu,                                 label: Large CPU,                                         type: numeric,
      yml_key: [ '["resource_pools"].select{|r| r["name"] == "large"}.first["cloud_properties"]["cpu"]' ],
      description: 'Specifies how many CPUs large VMs should get. Recommended value is 4.' }

      - {name: large_disk,                                label: Large Disk,                                        type: numeric,
      yml_key: [ '["resource_pools"].select{|r| r["name"] == "large"}.first["cloud_properties"]["disk"]' ],
      description: 'Specifies how much disk space large VMs should get. Recommended value is 10000 MB.' }

      - {name: large_ram,                                 label: Large Memory,                                      type: numeric,
      yml_key: [ '["resource_pools"].select{|r| r["name"] == "large"}.first["cloud_properties"]["ram"]' ],
      description: 'Specifies much memory large VMs should get. Recommended value is 2048 MB.' }

  - screen: Components
    id: components
    fields:
      - {name: dea_sep,                                   label: Droplet Execution Agents,                          type: separator}

      - {name: linux_deas,                                label: Linux DEAs,                                        type: numeric,
      yml_key: ['["jobs"].select{|job| job["name"] == "dea_next"}.first["instances"]', '["properties"]["uhuru"]["simple_webui"]["monitoring"]["components"]["dea"]'],
      description: 'Linux Droplet Execution Agent - the agent that that runs Linux applications (Java, Ruby, PHP, node.js).' }

      - {name: core_sep,                                  label: App Cloud Core Components,                         type: separator}

      - {name: cloud_controllers,                         label: Cloud Controllers,                                 type: numeric,
      yml_key: '["jobs"].select{|job| job["name"] == "cloud_controller_ng"}.first["instances"]',
      description: 'Number of Cloud Controllers. The Cloud Controller is the orchestrator of the system and hosts the API of the cloud.' }

      - {name: routers,                                   label: Routers,                                           type: numeric,
      yml_key: '["jobs"].select{|job| job["name"] == "router"}.first["instances"]',
      description: 'Number of Routers. The Router is a daemon that routes requests. In a larger system you should setup a pool of Routers behind a load balancer.' }

  - screen: Properties
    id: properties
    fields:
#TODO admin user password
#      - {name: admin_sep,                                 label: Administrator Settings,                            type: separator }

#      - {name: admin_email,                               label: Administrator E-mail,                              type: string,
#      yml_key: ['["properties"]["cc"]["admins"][0]', '["properties"]["cc"]["bootstrap_users"][0]["email"]'],
#      description: 'Email address of the cloud administrator. This is going to be used to log into the cloud administration tools. ' }

#      - {name: admin_password,                            label: Administrator Password,                            type: password,
#      yml_key: ['["properties"]["cc"]["bootstrap_users"][0]["password"]', '["properties"]["sysadmin_password"]'],
#      description: 'The password of the administrator user. This password will also be used for Windows "administrator" accounts and for Linux "vcap" accounts. The Linux "vcap" account is part of sudoers.' }

      - {name: cloud_info_sep,                            label: Cloud Information,                                 type: separator }

      - {name: domain,                                    label: Domain,                                            type: string,
      yml_key: '["properties"]["domain"]',
      description: 'Domain of the cloud. You must make sure that *.[domain]:80 and *.tunnels.[domain]:* point to the Router VM(s) and Uhuru Tunnel VMs respectively. The domain you specify here is also used by internal components to build endpoint URLs for communication.' }

      - {name: description,                               label: Description,                                       type: string,
      yml_key: '["properties"]["description"]',
      description: 'Description of the cloud. The description you specify here will be used in various places in the Web Interface and in the exposed Rest API.' }

      - {name: support_address,                           label: Support Address,                                   type: string,
      yml_key: '["properties"]["support_address"]',
      description: 'The e-mail address that is going to be displayed in the Web UI for customer support.' }

  - screen: User Limits
    id: user_limits
    fields:
      - {name: free_sep,                                  label: Free Accounts,                                     type: separator }

#TODO added service plans
      - {name: free_app_count,                            label: Maximum App Count,                                 type: numeric,
      yml_key: '["properties"]["ccng"]["quota_definition"]["free"]["memory_limit"]',
      description: 'Maximum memory of apps a normal user can have.'}

      - {name: free_app_count,                           label: Maximum App Count,                                 type: numeric,
      yml_key: '["properties"]["ccng"]["default_account_capacity"]["apps"]',
      description: 'Maximum number of apps an admin user can create in the cloud.'}

      - {name: free_uri_count,                            label: Maximum URL Count,                                 type: numeric,
      yml_key: '["properties"]["ccng"]["default_account_capacity"]["app_uris"]',
      description: 'Maximum number of URLs (subdomains) a normal user can provision.'}

      - {name: free_app_memory,                           label: Maximum App Memory,                                type: numeric,
      yml_key: '["properties"]["ccng"]["default_account_capacity"]["memory"]',
      description: 'Maximum amount of memory a normal user can provision in total.'}

      - {name: free_services,                             label: Maximum Services,                                  type: numeric,
      yml_key: '["properties"]["ccng"]["default_account_capacity"]["services"]',
      description: 'Maximum number of services (of any type) a normal user can create.'}

      - {name: admin_sep,                                 label: Admin Accounts,                                     type: separator }

      - {name: admin_app_count,                           label: Maximum App Count,                                 type: numeric,
      yml_key: '["properties"]["ccng"]["admin_account_capacity"]["apps"]',
      description: 'Maximum number of apps an admin user can create in the cloud.'}

      - {name: admin_uri_count,                           label: Maximum URL Count,                                 type: numeric,
      yml_key: '["properties"]["ccng"]["admin_account_capacity"]["app_uris"]',
      description: 'Maximum number of URLs (subdomains) an admin user can provision.'}

      - {name: admin_app_memory,                          label: Maximum App Memory,                                type: numeric,
      yml_key: '["properties"]["ccng"]["admin_account_capacity"]["memory"]',
      description: 'Maximum amount of memory an admin user can provision in total.'}

      - {name: admin_services,                            label: Maximum Services,                                  type: numeric,
      yml_key: '["properties"]["ccng"]["admin_account_capacity"]["services"]',
      description: 'Maximum number of services (of any type) an admin user can create.'}

